1. Write out a generic SELECT statement.

  SELECT date
  FROM table2
  WHERE id=12345;


2. Create a fun way to remember the order of operations in a SELECT statement,
   such as a mnemonic.

   If you take the first letter of each operation in a select statement, you
   get SFW. It's easy for me to remember if I make SFW stand for
   "San Fransisco Weather".


3. Given this dogs table, write queries to select the following pieces of data:

    -Display the name, gender, and age of all dogs that are part Labrador.

      SELECT name, gender, age
      FROM dogs
      WHERE breed LIKE '%Labrador%';


    -Display the ids of all dogs that are under 1 year old.

      SELECT id
      FROM dogs
      WHERE age < 1;


    -Display the name and age of all dogs that are female and over 35lbs.

      SELECT name, age
      FROM dogs
      WHERE gender ='F' AND weight > 35;


    -Display all of the information about all dogs that are not Shepherd mixes.

      SELECT *
      FROM dogs
      WHERE breed NOT LIKE '%shepherd';


    -Display the id, age, weight, and breed of all dogs that are either over 60lbs
     or Great Danes.

     SELECT id, age, weight, breed
     FROM dogs
     WHERE weight > 60
     OR breed ='great dane';



4. Given this cats table, what records are returned from these queries?

    SELECT name, adoption_date FROM cats;

    returns:
      name    -   adoption_date
    'Mushi'         '2016-03-22'
    'Seashell'      NULL
    'Azul'          '2016-04-17'
    'Victoire'      '2016-09-01'
    'Nala'          NULL



    SELECT name, age FROM cats;

    returns:
      name    -   age
    'Mushi'         1
    'Seashell'      7
    'Azul'          3
    'Victoire'      7
    'Nala'          1



5. From the cats table, write queries to select the following pieces of data.


  -Display all the information about all of the available cats.

    SELECT *
    FROM cats


  -Display the name and sex of all cats who are 7 years old.

    SELECT name, sex
    FROM cats
    WHERE age =7;


  -Find all of the names of the cats, so you don’t choose duplicate names for new
   cats.

   SELECT name
   FROM cats



6. List each comparison operator and explain when you would use it. Include a real
   world example for each.


   < less than: Use when you want the result to be less than a given value. If you
   want to find shoes on an online store that are less than $80.


   > greater than: Use when you want the result to be greater than a given value.
   If you want to adopt a dog that is more than 3 years old.


   <= less than or equal to: Use when you want the result to be less than or equal
   to a given value. Searching on craigslist for a car that is less than or
   equal to $10,000.


   >= greater than or equal to: Use when you want the result to be greater than or
   equal to a given value. Searching for an apartment on Zillow where the square
   footage is greater than or equal to 800 sq ft.


   = equal: Use when you want the result to be equal to a given value. When you're
   interested in a specific pair of sunglasses, you would either search for the exact
   name and brand, or enter a model number to get the right match.


   <> or != not equal: Use when you want the result to return everything but a certain
   value. If you want to view all available cars at a car lot, except for Mazda's.


7. From the cats table, what data is returned from these queries?

      -SELECT name FROM cats WHERE gender = ‘F’;
        Returns: 'Seashell', 'Nala'

      -SELECT name FROM cats WHERE age <> 3;
        Returns: 'Mushi', 'Seashell', 'Victoire', 'Nala'

      -SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
        Returns: 3, 4
